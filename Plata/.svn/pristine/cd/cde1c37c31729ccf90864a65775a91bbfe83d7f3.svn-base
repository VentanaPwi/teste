* MYBUILDER.PRG - FORMATADOR DE FORMS PADRÃO
***************
PARAMETERS p1,p2,p3,p4

* CONFERE ENTRADA DO BUILDER
IF TYPE('p1')<>'O'
	MESSAGEBOX('NENHUM OBJETO SELECIONADO PARA ESTE BUILDER','AVISO')
	RETURN
ENDIF
IF UPPER(p1.BASECLASS) <> 'FORM' AND NOT UPPER(p1.BASECLASS) == 'PAGE'
	MESSAGEBOX('OBJETO INVÁLIDO. ESTE BUILDER ESTÁ PREPARADO APENAS PARA FORMS E PAGES','AVISO')
	RETURN
ENDIF
IF TYPE('goCONEXAO.ALCA')<>'N'
	MESSAGEBOX('VOCE NÃO ESTÁ CONECTADO AO BANCO DE DADOS','AVISO')
	RETURN
ENDIF
IF goCONEXAO.ALCA<=0
	MESSAGEBOX('CONEXÃO COM O BANCO NÃO ESTÁ ATIVA','AVISO')
	RETURN
ENDIF

LOCAL lcCLASSE, lcFILENAME AS String
lcCLASSE = UPPER(p1.CLASS)
lcFILENAME = ' '
IF UPPER(p1.BASECLASS)='PAGE'
	lcCLASSE = UPPER(p1.PARENT.PARENT.CLASS)
	IF lcCLASSE='FORM'
		lcFILENAME = SYS(1271, p1.PARENT)
	ENDIF
ENDIF
IF UPPER(p1.BASECLASS)='FORM'
	lcFILENAME = SYS(1271, p1)
ENDIF

DO CASE
	CASE lcCLASSE='FORMDIG'
		DO FORM \TESTESVF\PLATA\BUILDER\myBUILDER_DIGITAR WITH p1, lcFILENAME
	CASE lcCLASSE='FORMSUPER'
		DO FORM \TESTESVF\PLATA\BUILDER\myBUILDER_CONSULTAR WITH p1, lcFILENAME
	CASE lcCLASSE='FORMREL' AND UPPER(p1.class) = 'PAGE'
		DO FORM \TESTESVF\PLATA\BUILDER\myBUILDER_ROTULADOR WITH p1, lcFILENAME
	OTHERWISE
		MESSAGEBOX('TIPO DE FORMULÁRIO INVÁLIDO PARA USAR O BUILDER: '+lcCLASSE,0,'BUILDER')
ENDCASE
RETURN

***********************************************************************************
PROC BUILDDIG
*************

LOCAL lcTABELA AS STRING
lcTABELA = INPUTBOX('INFORMA O NOME DA TABELA (SQL)','ESCOLHER TABELA-BASE','TS_GRUPOS')
lcTABELA = ALLTRIM(UPPER(lcTABELA))
IF EMPTY(lcTABELA)
	RETURN
ENDIF

* ACESSANDO A TABELA ESCOLHIDA
lcCOMANDO = 'SELECT TOP 10 * FROM '+lcTABELA
=PESQUISASQL(lcCOMANDO,'TMPBUILD1')
IF NOT USED('TMPBUILD1')
	RETURN
ENDIF

* FUNÇÃO BÁSICA DE VALIDAÇÃO
TEXT TO lcMETHODVALID NOSHOW PRETEXT 7
	LOCAL lnOK AS Integer
	lnOK = VALIDAR(THIS)
	IF lnOK = 1
	<TAB>THISFORM.<OBJETO>.Value = TMPVALIDAR.<CAMPO>
	ELSE
	<TAB>THISFORM.<OBJETO>.Value = ''
	ENDIF
	RETURN(lnOK)
ENDTEXT
lcMETHODVALID	= STRTRAN(lcMETHODVALID,'<TAB>',CHR(9))

* CONSTRUINDO CURSOR DOS CAMPOS PARA OPTAR CAMPOS-OBJETOS
SELE TMPBUILD1
lnQC = AFIELDS(laCAMPOS)
CREATE CURSOR TMPBUILD2 (NOMECAMPO C(20), TIPO C(1), TAMANHO N(3), OBJETO C(2), TABELAF4 C(25), NAOVAZIO C(1), CAMPOMOSTRA C(30))
FOR I = 1 TO lnQC
	SELE TMPBUILD2
	M.NOMECAMPO = laCAMPOS[I,1]
	M.TIPO		= laCAMPOS[I,2]
	M.TAMANHO	= laCAMPOS[I,3]
	APPEND BLANK
	GATHER MEMVAR
ENDFOR
SELE TMPBUILD2
GO TOP
BROWSE FIELDS NOMECAMPO :R, TIPO :R,;
	TAMANHO :R, OBJETO :P="@!",;
	NAOVAZIO :P="@!", TABELAF4 :P="@!", CAMPOMOSTRA :P="@!" :20 ;
	TITLE "OBJETOS (T=text, C=combo, L=list, E=edit, R=radio, X=check, O=option, E=edit, S=Spin)" NORMAL

LOCAL lcCAPTION, lcGRUPO AS String
STORE '' TO lcCAPTION, lcGRUPO
lcCAPTION	= INPUTBOX('INFORME O NOME DO CAPTION DO FORM','ESCOLHER CAPTION',lcTABELA)
lcGRUPO		= INPUTBOX('INFORME O NOME DO OBJETO (OBJ_digitar)','ESCOLHER MODULO',lcTABELA)
LCgrupo = ALLTRIM(LCgrupo) + '_DIGITAR'

IF UPPER(P1.BASECLASS) = 'FORM'
	P1.CAPTION = lcCAPTION
	P1.NAME = lcGRUPO
ENDIF

* CRIANDO OS CONTROLES NO FORM
lnTOP = 12
lnLEFT = 120
SELE TMPBUILD2
GO TOP
SCAN WHILE NOT EOF()
	IF EMPTY(TMPBUILD2.OBJETO)
		LOOP
	ENDIF
	* LABEL EXPLICATIVO
	lcNOMECAMPO = ALLTRIM(UPPER(TMPBUILD2.NOMECAMPO))
	lcOBJNOME = 'lbl'+lcNOMECAMPO
	lcOBJCLASSE = 'LABEL'
	lcCAPTION = ALLTRIM(PROPER(SUBSTR(lcNOMECAMPO,4,20)))
	P1.ADDOBJECT(lcOBJNOME,lcOBJCLASSE)
	P1.&lcOBJNOME .TOP = lnTOP
	P1.&lcOBJNOME .LEFT = 12
	P1.&lcOBJNOME .STYLE = 0
	P1.&lcOBJNOME .AUTOSIZE = .T.
	P1.&lcOBJNOME .CAPTION = lcCAPTION
	P1.&lcOBJNOME .BACKSTYLE = 0
	* OBJETO DE INPUT DOS DADOS
	DO CASE
		CASE TMPBUILD2.OBJETO='T'
			lcOBJNOME = 'txt'+lcNOMECAMPO
			lcOBJCLASSE = 'TEXTBOX'
		CASE TMPBUILD2.OBJETO='S'
			lcOBJNOME = 'spn'+lcNOMECAMPO
			lcOBJCLASSE = 'SPINNER'
		CASE TMPBUILD2.OBJETO='E'
			lcOBJNOME = 'edt'+lcNOMECAMPO
			lcOBJCLASSE = 'EDITBOX'
		CASE TMPBUILD2.OBJETO='X'
			lcOBJNOME = 'chk'+lcNOMECAMPO
			lcOBJCLASSE = 'CHECKBOX'
		CASE TMPBUILD2.OBJETO='O'
			lcOBJNOME = 'opt'+lcNOMECAMPO
			lcOBJCLASSE = 'OPTIONGROUP'
		CASE TMPBUILD2.OBJETO='C'
			lcOBJNOME = 'cbo'+lcNOMECAMPO
			lcOBJCLASSE = 'COMBOBOX'
		OTHERWISE
			lcOBJNOME = 'txt'+lcNOMECAMPO
			lcOBJCLASSE = 'TEXTBOX'
	ENDCASE
	P1.ADDOBJECT(lcOBJNOME,lcOBJCLASSE)
	P1.&lcOBJNOME .TOP = lnTOP
	P1.&lcOBJNOME .LEFT = lnLEFT
	P1.&lcOBJNOME .HEIGHT = 25
	IF lcOBJCLASSE = 'CHECKBOX'
		P1.&lcOBJNOME .AUTOSIZE = .T.
		P1.&lcOBJNOME .BACKSTYLE = 0
		P1.&lcOBJNOME .CAPTION = lcCAPTION
	ENDIF
	IF lcOBJCLASSE = 'OPTIONGROUP'
		P1.&lcOBJNOME .AUTOSIZE = .T.
		P1.&lcOBJNOME .BACKSTYLE = 0
		P1.&lcOBJNOME .BUTTONCOUNT = 2
	ENDIF
	IF lcOBJCLASSE = 'COMBOBOX'
		P1.&lcOBJNOME .STYLE = 2
		P1.&lcOBJNOME .ROWSOURCETYPE = 1
		P1.&lcOBJNOME .ROWSOURCE = '1,2,3'
	ENDIF
	IF lcOBJCLASSE = 'EDITBOX'
		P1.&lcOBJNOME .HEIGHT = 53
		lnTOP = lnTOP + 24
	ENDIF
	IF lcOBJCLASSE = 'TEXTBOX'
		lnSIZE = TMPBUILD2.TAMANHO
		IF TYPE('TMPBUILD1.'+lcNOMECAMPO)='C'
			P1.&lcOBJNOME .FORMAT = '!'
		ENDIF
		IF TYPE('TMPBUILD1.'+lcNOMECAMPO)='N'
			IF lcNOMECAMPO='VL_'
				lcMASK = '999,999,999.99'
			ELSE
				lcMASK = RIGHT('999,999,999,999',lnSIZE)
			ENDIF
			P1.&lcOBJNOME .SELECTONENTRY = .T.
			P1.&lcOBJNOME .INPUTMASK = lcMASK
			lnSIZE = LEN(lcMASK)
		ENDIF
		P1.&lcOBJNOME .WIDTH = TMPBUILD2.TAMANHO*8 + 14
	ENDIF
	P1.&lcOBJNOME .CONTROLSOURCE = 'THISFORM.EE.'+lcNOMECAMPO
	IF NOT EMPTY(TMPBUILD2.TABELAF4)
		P1.&lcOBJNOME .TAG = ALLTRIM(TMPBUILD2.TABELAF4)
	ENDIF
	P1.&lcOBJNOME .COMMENT = IIF(NOT EMPTY(TMPBUILD2.NAOVAZIO),'*',' ')
	
	* CAMPO LATERAL (DISPLAY)
	IF NOT EMPTY(TMPBUILD2.CAMPOMOSTRA)
		lcOBJNOME2 = 'txt'+ALLTRIM(TMPBUILD2.CAMPOMOSTRA)
		P1.ADDOBJECT(lcOBJNOME2,'TEXTBOX')
		P1.&lcOBJNOME2 .ENABLED = .F.
		P1.&lcOBJNOME2 .TOP = lnTOP
		P1.&lcOBJNOME2 .LEFT = lnLEFT + 80
		* CLAUSULA VALID DA CHAVE
		lcOBJETOV = P1.&lcOBJNOME2 .NAME
		lcVALIDAR = lcMETHODVALID
		lcVALIDAR = STRT( lcVALIDAR, '<OBJETO>', lcOBJETOV)
		lcVALIDAR = STRT( lcVALIDAR, '<CAMPO>', ALLTRIM(TMPBUILD2.CAMPOMOSTRA))
		P1.&lcOBJNOME .WRITEMETHOD('VALID',lcVALIDAR)
	ENDIF
	lnTOP = lnTOP + 36
ENDSCAN
IF TYPE('P1.MyTabela') $ 'CLN'
	P1.MyTabela = lcTABELA
ENDIF
USE IN TMPBUILD1
USE IN TMPBUILD2
RETURN


*******************************************************************************************
PROC BUILDGRADE
***************
	PRIVATE lcMETHODEXP, lcTABELA, lcCOMANDO, lcAUX AS String
	PRIVATE lcCAMPOS, lcGRADE, lcORDEM, lcPESQUISAS, lcGRID AS String
	PRIVATE lcALIASTAB AS String
	STORE '' TO lcCAMPOS, lcGRADE, lcORDEM, lcPESQUISAS, lcGRID
	LOCAL lnQC, lnXI, lnOCOALIAS AS Integer
	lcMETHODEXP = TEXTOGRADE()

	lcTABELA = INPUTBOX('INFORMA O NOME DA TABELA COM ALIAS (SQL)','ESCOLHER TABELA-BASE','TS_GRUPOS')
	lcTABELA = ALLTRIM(UPPER(lcTABELA))
	IF EMPTY(lcTABELA)
		RETURN
	ENDIF
	lcTABELA	= UPPER(lcTABELA)
	lcALIASTAB	= ''
	IF ' ' $ lcTABELA
		lnOCOALIAS = RAT(' ',lcTABELA)
		lcALIASTAB = SUBSTR(lcTABELA,lnOCOALIAS+1)+'.'
	ENDIF

	* ACESSANDO A TABELA ESCOLHIDA
	lcCOMANDO = 'SELECT TOP 10 * FROM '+lcTABELA
	=PESQUISASQL(lcCOMANDO,'TMPBUILD1')
	IF NOT USED('TMPBUILD1')
		RETURN
	ENDIF

	* CONSTRUINDO CURSOR DOS CAMPOS PARA OPTAR CAMPOS-OBJETOS
	SELE TMPBUILD1
	lnQC = AFIELDS(laCAMPOS)
	CREATE CURSOR TMPBUILD2 (NOMECAMPO C(20), NOMEGRADE C(20), POSICAO C(3), MASCARA C(20),;
							 TAMANHO N(4), ORDEM N(3), PESQUISAS C(40),;
							 SQLALIAS C(20), TAMCPO N(8), TIPCPO C(1))
	FOR lnXI = 1 TO lnQC
		SELE TMPBUILD2
		M.NOMECAMPO = laCAMPOS[lnXI,1]
		M.NOMEGRADE	= SUBSTR(M.NOMECAMPO,4)
		M.TAMANHO	= laCAMPOS[lnXI,3]*10-10
		M.TAMCPO	= laCAMPOS[lnXI,3]
		M.TIPCPO	= laCAMPOS[lnXI,2]
		APPEND BLANK
		GATHER MEMVAR
	ENDFOR
	SELE TMPBUILD2
	GO TOP
	BROWSE FIELDS NOMECAMPO :R, NOMEGRADE :H="HEADER GRADE" :P="@!",;
					POSICAO, MASCARA, TAMANHO, ORDEM :P="@!" :H="ORDER BY", ;
					PESQUISAS :H="LABEL DA PESQUISA", SQLALIAS :P="@!" :H="SQL-ALIAS DO CAMPO";
		TITLE "FORMATAÇÃO DO CONTEUDO DA GRADE, PESQUISAS, CAMPOS SQL" NORMAL

	DO BUILDCPO
	DO BUILDORD
	DO BUILDPES
	LOCAL lcCAPTION, lcGRUPO, lcPRENOME, lcPK0 AS String
	STORE '' TO lcCAPTION, lcGRUPO
	lcCAPTION	= INPUTBOX('INFORME O NOME DO CAPTION DO FORM','ESCOLHER CAPTION',lcTABELA)
	lcGRUPO		= INPUTBOX('INFORME O NOME DO OBJETO (OBJ_consultar)','ESCOLHER MODULO',lcTABELA)
	lcPK0 = '0'
	IF TYPE('TMPBUILD1.PK_ID')='C'
		lcPK0 = "' '"
	ENDIF
	P1.CAPTION	= lcCAPTION
	P1.NAME		= lcGRUPO+'_CONSULTAR'
	lcMETHODEXP = STRTRAN(lcMETHODEXP,'<<CAMPOS>>',lcCAMPOS)
	lcMETHODEXP = STRTRAN(lcMETHODEXP,'<<TABELA>>',lcTABELA)
	lcMETHODEXP = STRTRAN(lcMETHODEXP,'<<ORDEM>>',lcORDEM)
	lcMETHODEXP = STRTRAN(lcMETHODEXP,'<<CAMPOSGRADE>>',lcGRADE)
	lcMETHODEXP = STRTRAN(lcMETHODEXP,'<<PESQUISAS>>',lcPESQUISAS)
	lcMETHODEXP = STRTRAN(lcMETHODEXP,'<<CAPTION>>',lcCAPTION)
	lcMETHODEXP = STRTRAN(lcMETHODEXP,'<<FORMDIG>>',lcGRUPO)
	lcMETHODEXP = STRTRAN(lcMETHODEXP,'<<PK0>>',lcPK0)
	P1.WRITEMETHOD('MYAMBIENTAR',lcMETHODEXP)
RETURN

PROC BUILDCPO
*************
	* CAMPOS DO COMANDO SQL, CAMPOS DA GRADE1
	SELE TMPBUILD2
	INDEX ON POSICAO TO TEMPFILE()
	GO TOP
	SCAN WHILE !EOF()
		IF EMPTY(TMPBUILD2.POSICAO)
			LOOP
		ENDIF
		lcAUX1		= lcALIASTAB + ALLTRIM(TMPBUILD2.NOMECAMPO)
		IF NOT EMPTY(TMPBUILD2.SQLALIAS)
			lcAUX1	= lcAUX1 + ' AS ' + ALLTRIM(TMPBUILD2.SQLALIAS)
			lcAUX2	= ALLTRIM(UPPER(TMPBUILD2.SQLALIAS))
		ELSE
			lcAUX2	= ALLTRIM(UPPER(TMPBUILD2.NOMECAMPO))
		ENDIF
		* CAMPOS DO COMANDO SQL
		IF NOT EMPTY(lcCAMPOS)
			lcCAMPOS = lcCAMPOS + ', '+CHR(13)+CHR(9)
		ELSE
			lcCAMPOS = CHR(9)
		ENDIF
		lcCAMPOS	= lcCAMPOS + lcAUX1
		* TEXT TO DOS CAMPOS DA GRADE
		IF VAL( TMPBUILD2.POSICAO ) > 0
			lcGRADE	= lcGRADE+IIF(EMPTY(lcGRADE),'',CHR(13))+CHR(9) + '|' + ;
						lcAUX2 + REPLICATE(CHR(9),3)+'|'+;
						ALLTRIM(TMPBUILD2.NOMEGRADE)+REPLICATE(CHR(9),3)+'|'+;
						ALLTRIM(STR(TMPBUILD2.TAMANHO))+REPLICATE(CHR(9),2)+'|'+;
						ALLTRIM(TMPBUILD2.MASCARA)+REPLICATE(CHR(9),2)+'|'
		ENDIF
	ENDSCAN
RETURN

PROC BUILDORD
*************
	* COMANDO SQL "ORDER BY"
	SELE TMPBUILD2
	INDEX ON ORDEM TO TEMPFILE()
	GO TOP
	SCAN WHILE !EOF()
		IF EMPTY(TMPBUILD2.ORDEM)
			LOOP
		ENDIF
		IF NOT EMPTY(TMPBUILD2.SQLALIAS)
			lcAUX1	= ALLTRIM(UPPER(TMPBUILD2.SQLALIAS))
		ELSE
			lcAUX1	= ALLTRIM(UPPER(TMPBUILD2.NOMECAMPO))
		ENDIF
		lcORDEM	= lcORDEM + IIF(EMPTY(lcORDEM),'',', ') + lcAUX1
	ENDSCAN
RETURN

PROC BUILDPES
*************
	* TEXT TO PARA PESQUISAS
	SELE TMPBUILD2
	INDEX ON POSICAO TO TEMPFILE()
	GO TOP
	SCAN WHILE !EOF()
		IF NOT EMPTY(TMPBUILD2.PESQUISAS)
			DO CASE
				CASE TMPBUILD2.TIPCPO = 'C'
					lcAUX1 = 'SPACE('+ALLTRIM(STR(TMPBUILD2.TAMCPO))+')'
				CASE TMPBUILD2.TIPCPO = 'N'
					lcAUX1 = '0'
				CASE TMPBUILD2.TIPCPO = 'D'
					lcAUX1 = 'DATE()'
				OTHERWISE
					lcAUX1 = 'SPACE(20)'
			ENDCASE
			IF NOT EMPTY(TMPBUILD2.SQLALIAS)
				lcAUX2	= ALLTRIM(UPPER(TMPBUILD2.SQLALIAS))
			ELSE
				lcAUX2	= ALLTRIM(UPPER(TMPBUILD2.NOMECAMPO))
			ENDIF
			lcPESQUISAS = lcPESQUISAS+IIF(EMPTY(lcPESQUISAS),'',CHR(13))+CHR(9) + '|' + ;
							ALLTRIM(TMPBUILD2.PESQUISAS)+REPLICATE(CHR(9),3)+'|'+;
							lcAUX2 + REPLICATE(CHR(9),3)+'|'+;
							ALLTRIM(TMPBUILD2.MASCARA)+REPLICATE(CHR(9),2)+'|'+;
							lcAUX1+REPLICATE(CHR(9),2)+'|'
		ENDIF
	ENDSCAN
RETURN

FUNC TEXTOGRADE
***************
LOCAL lcRETORNO AS String
TEXT TO lcRETORNO NOSHOW
* VARIAVEIS DO COMANDO SQL
THISFORM.GRADE1.MYSQLTOP		= '500'
THISFORM.GRADE1.MYSQLTABELA		= '<<TABELA>>'
THISFORM.GRADE1.MYSQLJOIN		= ''
THISFORM.GRADE1.MYSQLCONDICAO	= ''
THISFORM.GRADE1.MYSQLCONDFIXA	= ''
THISFORM.GRADE1.MYSQLCONDSYS	= ''
THISFORM.GRADE1.MYSQLORDEM		= '<<ORDEM>>'
THISFORM.GRADE1.MYSQLEXTRA		= ''

* CAMPOS DA SELECT
<<TEXTO>> THISFORM.GRADE1.MYSQLCAMPOS NOSHOW PRETEXT 7
<<CAMPOS>>
<<FIMTEXTO>>

* CONFIGURAÇÃO DOS CAMPOS DO GRID
<<TEXTO>> THISFORM.GRADE1.MYCAMPOS NOSHOW PRETEXT 7
<<CAMPOSGRADE>>
<<FIMTEXTO>>

* MENU DE CONTEXTO
<<TEXTO>> THISFORM.GRADE1.MYCONTEXTO NOSHOW PRETEXT 7
	|\<Alterar			|luREFRES=CHAMAFORM('[<<FORMDIG>>_DIGITAR]','MODAL',TMPGRADE.PK_ID)				|
	|\<Incluir			|luREFRES=CHAMAFORM('[<<FORMDIG>>_DIGITAR]','MODAL',<<PK0>>)					|
	|\<Zoom				|luREFRES=CHAMAFORM('[<<FORMDIG>>_DIGITAR]','MODAL',TMPGRADE.PK_ID,'SOLEITURA')	|
	|\<Excluir			|DO [<<FORMDIG>>_DELETAR] WITH TMPGRADE.PK_ID 									|
<<FIMTEXTO>>

* PARAMETROS DA PESQUISA
<<TEXTO>> THISFORM.GRADE1.MYPESQUISAS NOSHOW PRETEXT 7
<<PESQUISAS>>
<<FIMTEXTO>>

* ABRE ARQUIVO DO GRID
THISFORM.Caption = '<<CAPTION>>'
THISFORM.GRADE1.MyTabela = 'TMPGRADE'
THISFORM.GRADE1.HMyCmdSql()
ENDTEXT
lcRETORNO = STRTRAN(lcRETORNO,'<<TEXTO>>','TEXT TO')
lcRETORNO = STRTRAN(lcRETORNO,'<<FIMTEXTO>>','ENDTEXT')
RETURN(lcRETORNO)