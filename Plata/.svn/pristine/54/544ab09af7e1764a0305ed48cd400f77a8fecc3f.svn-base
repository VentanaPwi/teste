************************************
* by TAKEHANA, THIAGO Y.
* 21/07/2013
************************************
PROC COMPSTRING
***************
LPARAMETERS tcSTRING1, tcSTRING2, tcFILE1

	LOCAL lcTEMPFILE1, lcTEMPFILE2 AS String
	
	* ARQUIVOS TEMPORÁRIOS PARA EFETUAR APPEND
	lcTEMPFILE1 = TEMPFILETOOLS('TXT')
	lcTEMPFILE2 = TEMPFILETOOLS('TXT')

	=STRTOFILE(tcSTRING1, lcTEMPFILE1)
	=STRTOFILE(tcSTRING2, lcTEMPFILE2)

	* VERIFICA SE ARQUIVOS FORAM CRIADOS COM SUCESSO
	IF FILE(tcSTRING1) AND FILE(tcSTRING2)
		lcTEMPFILE1 = tcSTRING1
		lcTEMPFILE2 = tcSTRING2
	ENDIF

	* JOGA CÓDIGO PARA CURSOR LINHA A LINHA DO PRIMEIRO ARQUIVO
	IF USED('TMP1')
		USE IN TMP1
	ENDIF
	CREATE CURSOR TMP1 (CAMPO1 VARCHAR(254), TG_DIFF INT)
	SELE TMP1
	APPEND FROM (lcTEMPFILE1) TYPE SDF

	* JOGA CÓDIGO PARA CURSOR LINHA A LINHA DO SEGUNDO ARQUIVO
	IF USED('TMP2')
		USE IN TMP2
	ENDIF	
	CREATE CURSOR TMP2 (CAMPO1 VARCHAR(254), TG_DIFF INT)
	SELE TMP2
	APPEND FROM (lcTEMPFILE2) TYPE SDF

	* POSICIONA PONTEIRO NO INÍCIO DOS CURSORES
	SELE TMP1
	GO TOP
	SELE TMP2
	GO TOP

	LOCAL llENCONTROU AS Logical
	STORE .F. TO llENCONTROU
	
	LOCAL lnOCO AS Integer
	STORE 0 TO lnOCO
	
	* COMPARA LINHA A LINHA
	SELE TMP1
	GO TOP
	SCAN WHILE NOT EOF()
	
		* IGNORA LINHAS EM BRANCO DE AMBOS OS LADOS
		IF EMPTY(TMP1.CAMPO1)
			LOOP
		ENDIF
		IF EMPTY(TMP2.CAMPO1)
			SELE TMP2
			IF NOT EOF()
				SKIP
			ENDIF
		ENDIF
		
		* VERIFICA SE CONTEÚDO É EXATAMENTE IGUAL
		SELE TMP2
		llENCONTROU = .F.
		* CONTEÚDO DIFERENTE, ENTÃO PROCURA LINHA QUE SE ENCAIXE
		IF NOT ALLTRIM(TMP1.CAMPO1) == ALLTRIM(TMP2.CAMPO1)

			* VERIFICA SIMILARIDADE DA LINHA
			IF SIMILAR(TMP1.CAMPO1, TMP2.CAMPO1)
				SELE TMP1
				REPLACE TG_DIFF WITH 1
				
				SELE TMP2
				SKIP
				llENCONTROU = .T.
			ELSE
				SELE TMP2
				lnRECNO = MIN(RECNO('TMP2'),RECCOUNT('TMP2'))
				DO WHILE .T.
					* NÃO ENCONTROU ENTÃO É LINHA NOVA
					* CONTINUA DE ONDE HAVIA PARADO
					IF EOF()
						SELE TMP1
						REPLACE TG_DIFF WITH 1

						SELE TMP2
						GO (lnRECNO)
						
						EXIT
					ENDIF

					* ENCONTROU ENTÃO CONTINUA NA PRÓXIMA LINHA
					IF ALLTRIM(TMP1.CAMPO1) == ALLTRIM(TMP2.CAMPO1)
						* VERIFICA SE OCORRÊNCIA É COMUM, CASO SEJA SERA IGNORADA
						SELE TMP2
						lnRECNOAUX = RECNO()
						COUNT FOR ALLTRIM(TMP1.CAMPO1) == ALLTRIM(TMP2.CAMPO1) TO lnOCO
						GO (lnRECNOAUX)
						SELE TMP2
						IF lnOCO > 5
							SELE TMP1
							REPLACE TG_DIFF WITH 1

							SELE TMP2
							GO (lnRECNO)
						ELSE
							llENCONTROU = .T.
						ENDIF
						
						* SE É COMUM OU ENCONTROU CONTINUA ANÁLISE
						EXIT

					ENDIF

					* PASSA PARA PRÓXIMO REGISTRO
					SKIP
				ENDDO
			ENDIF
		ELSE
			llENCONTROU = .T.
		ENDIF
		SELE TMP2
		IF NOT EOF('TMP2') AND llENCONTROU
			SKIP
		ENDIF
		
		SELE TMP1
	ENDSCAN

	LOCAL lnQTDIFF AS Integer
	COUNT FOR TG_DIFF = 1 TO lnQTDIFF
	
	TMP2HTML('TMP1', tcFILE1)
	
	IF lnQTDIFF = 0
		RETURN(.F.)
	ENDIF
	
	RETURN(.T.)
ENDPROC

PROC TMP2HTML
*************
LPARAMETERS tcTMP, tcFILE
	LOCAL loHTML AS HTMLCODE OF 'PRG\MHHTMLCODE.PRG'
	loHTML = NEWOBJECT('HTMLCODE','PRG\MHHTMLCODE.PRG')
	
	LOCAL lcRESULT AS String
	STORE '' TO lcRESULT
	
	LOCAL lnQTLINHA AS Integer
	STORE 0 TO lnQTLINHA
	
	SELE (tcTMP)
	GO TOP
	SCAN WHILE NOT EOF()
		*lnQTLINHA = lnQTLINHA + 1
		IF TG_DIFF = 1
			lcRESULT = lcRESULT + '[(matchline)]' + CAMPO1 + CHR(13) + CHR(10)
		ELSE
			lcRESULT = lcRESULT + CAMPO1 + CHR(13) + CHR(10)
		ENDIF
	ENDSCAN
	
	lcRESULT = loHTML.PRGTOHTML(lcRESULT)

	TEXT TO lcHEAD NOSHOW TEXTMERGE PRETEXT 15
		<Head>
		<< FILETOSTR('HTML\DEFAULT.CSS') >>
		<< FILETOSTR('HTML\DEFAULT.JS') >>
		<Form id="myform"><Body><input type="HIDDEN" Id="txtScroll" name="txtScrollValue" Value=0 >
	ENDTEXT
	
	TEXT TO lcFOOT NOSHOW PRETEXT 15
		</Body></Form>
	ENDTEXT
	
	=STRTOFILE(lcHEAD + lcRESULT + lcFOOT, tcFILE)
ENDPROC

PROC SIMILAR
************
LPARAMETERS tcTEXTO1, tcTEXTO2

	* ROTINA DESATIVADA
	RETURN(.F.)
	
	IF EMPTY(tcTEXTO1) OR EMPTY(tcTEXTO2)
		RETURN(.F.)
	ENDIF

	LOCAL lnTOTAL, lnIGUAIS AS Integer
	STORE 0 TO lnTOTAL, lnIGUAIS
	
	lnTOTAL = LEN(tcTEXTO1)
	
	FOR lnXI = 1 TO lnTOTAL
		lcCHAR1 = SUBSTR(tcTEXTO1, lnXI, 1)
		lcCHAR2 = SUBSTR(tcTEXTO2, lnXI, 1)
		
		IF lcCHAR1 == lcCHAR2
			lnIGUAIS = lnIGUAIS + 1
		ENDIF
	ENDFOR
	
	* VERIFICA PERCENTUAL DE SIMILARIDADE
	* MAIOR QUE 80% ENTÃO É A MESMA LINHA
	LOCAL lnFATOR_SIMILARIDADE AS Integer
	lnFATOR_SIMILARIDADE = 80
	IF (lnIGUAIS / lnTOTAL * 100) >= lnFATOR_SIMILARIDADE
		RETURN(.T.)
	ENDIF
	
	RETURN(.F.)
ENDPROC

PROC TEMPFILETOOLS
*************
LPARAMETERS tcEXT

	RETURN 'TEMP\' + SYS(2015) + '.' + tcEXT
	
ENDPROC

PROC ANALISAR
*************
LPARAMETERS tcCURSOR1, tcCURSOR2, tcRESULT
	SELECT * FROM (tcCURSOR1) INTO CURSOR (tcRESULT) READWRITE
	
	SELE (tcCURSOR2)
	GO TOP
	
 	SELE (tcCURSOR1)
 	GO TOP
	SCAN WHILE NOT EOF()
		IF NOT &tcCURSOR1..CAMPO1 == &tcCURSOR2..CAMPO1
			IF LEFT(&tcCURSOR1..CAMPO1,4) == LEFT(&tcCURSOR2..CAMPO1,4) OR RIGHT(&tcCURSOR1..CAMPO1,4) == RIGHT(&tcCURSOR2..CAMPO1,4)
			* SIMILAR - LINHA ALTERADA
				SELECT(tcCURSOR1)
				REPLACE TG_DIFF WITH 2
				SELECT(tcCURSOR2)
				SKIP
			ELSE
			* DIFERENTE
				lnRECNO = RECNO(tcCURSOR2)
				SELECT(tcCURSOR2)
				* TENTA ENCONTRAR PROXIMA LINHA
				LOCATE FOR LEFT(&tcCURSOR1..CAMPO1,4) == LEFT(&tcCURSOR2..CAMPO1,4) OR RIGHT(&tcCURSOR1..CAMPO1,4) == RIGHT(&tcCURSOR2..CAMPO1,4)
				IF FOUND()
					* DIFERENTE - NOVA LINHA
					SELECT(tcCURSOR1)
					REPLACE TG_DIFF WITH 1					
				ELSE
					* DIFERENTE - NOVA LINHA
					SELECT(tcCURSOR1)
					REPLACE TG_DIFF WITH 1
					
					SELECT(tcCURSOR2)
					GO (lnRECNO)
				ENDIF
			ENDIF
		ELSE
			* IGUAL
			SELECT(tcCURSOR2)
			SKIP
		ENDIF
		SELECT(tcCURSOR1)
	ENDSCAN
ENDPROC

PROC MENS
*****************
LPARAMETERS tcMENSAGEM, tcTITULO

	IF VARTYPE(tcMENSAGEM) <> 'C'
		tcMENSAGEM = ''
	ENDIF

	IF VARTYPE(tcTITULO) <> 'C'
		tcTITULO = 'Alerta!'
	ENDIF

	MESSAGEBOX(tcMENSAGEM, 64, tcTITULO)

ENDPROC

PROC COMPPROP
***************
LPARAMETERS tcSTRING1, tcSTRING2, tcFILE1
	
	LOCAL lcTEMPFILE1, lcTEMPFILE2 AS String
	
	* ARQUIVOS TEMPORÁRIOS PARA EFETUAR APPEND
	lcTEMPFILE1 = TEMPFILETOOLS('TXT')
	lcTEMPFILE2 = TEMPFILETOOLS('TXT')

	=STRTOFILE(tcSTRING1, lcTEMPFILE1)
	=STRTOFILE(tcSTRING2, lcTEMPFILE2)

	* VERIFICA SE ARQUIVOS FORAM CRIADOS COM SUCESSO
	IF FILE(tcSTRING1) AND FILE(tcSTRING2)
		lcTEMPFILE1 = tcSTRING1
		lcTEMPFILE2 = tcSTRING2
	ENDIF

	* JOGA CÓDIGO PARA CURSOR LINHA A LINHA DO PRIMEIRO ARQUIVO
	IF USED('TMP1')
		USE IN TMP1
	ENDIF
	CREATE CURSOR TMP1 (CAMPO1 VARCHAR(254), DS_PROP C(150), DS_VALUE C(150), TG_DIFF INT)
	SELE TMP1
	APPEND FROM (lcTEMPFILE1) TYPE SDF
	GO TOP
	REPLACE ALL DS_PROP 	WITH UPPER(ALLTRIM(STREXTRACT(CAMPO1, '',' ='))),;
				DS_VALUE	WITH UPPER(ALLTRIM(STREXTRACT(CAMPO1, '= ','')))
	
	* JOGA CÓDIGO PARA CURSOR LINHA A LINHA DO SEGUNDO ARQUIVO
	IF USED('TMP2')
		USE IN TMP2
	ENDIF	
	CREATE CURSOR TMP2 (CAMPO1 VARCHAR(254), DS_PROP C(150), DS_VALUE C(150), TG_DIFF INT)
	SELE TMP2
	APPEND FROM (lcTEMPFILE2) TYPE SDF
	REPLACE ALL DS_PROP 	WITH UPPER(ALLTRIM(STREXTRACT(CAMPO1, '',' ='))),;
				DS_VALUE	WITH UPPER(ALLTRIM(STREXTRACT(CAMPO1, '= ','')))

	* POSICIONA PONTEIRO NO INÍCIO DOS CURSORES
	SELE TMP1
	GO TOP
	SELE TMP2
	GO TOP

	LOCAL llENCONTROU AS Logical
	STORE .F. TO llENCONTROU
	
	LOCAL lnOCO AS Integer
	STORE 0 TO lnOCO
	
	LOCAL lcPROP, lcVALUE AS String
	
	* COMPARA CADA PROPRIEDADE
	SELE TMP1
	GO TOP
	SCAN WHILE NOT EOF()
		lcPROP 	= DS_PROP
		lcVALUE	= DS_VALUE
		
		* IGNORA PROPRIEDADES SEM NECESSIDADE
		IF UPPER(ALLTRIM(lcPROP)) $ 'TABINDEX'
			LOOP
		ENDIF
		
		SELE TMP2
		GO TOP
		LOCATE FOR lcPROP == DS_PROP
		IF FOUND()
			IF lcVALUE == DS_VALUE
				* NÃO EXISTE DIFERENÇA, VAI PARA O PRÓXIMO
				LOOP
			ENDIF
		ENDIF
		
		* EXISTE DIFERENÇA, ENTÃO MARCA O REGISTRO
		SELE TMP1
		REPLACE TG_DIFF WITH 1
	ENDSCAN
	
	LOCAL lcRESULT AS String
	STORE '' TO lcRESULT
	
	SELE TMP1
	GO TOP
	SCAN WHILE NOT EOF()
		IF TG_DIFF = 1
			lcRESULT = lcRESULT + CAMPO1 + '</br>'
			llENCONTROU = .T.
		ENDIF
	ENDSCAN

	* NAO ENCONTROU DIFERENCA
	IF NOT llENCONTROU
		RETURN(.F.)
	ENDIF
	
	TEXT TO lcHEAD NOSHOW TEXTMERGE PRETEXT 7
		<Head>
		<< FILETOSTR('HTML\DEFAULT.CSS') >>
		<< FILETOSTR('HTML\DEFAULT.JS') >>
		<Form id="myform"><Body><input type="HIDDEN" Id="txtScroll" name="txtScrollValue" Value=0 >
	ENDTEXT
	
	TEXT TO lcFOOT NOSHOW PRETEXT 15
		</Body></Form>
	ENDTEXT

	=STRTOFILE(lcHEAD + lcRESULT + lcFOOT, tcFILE1, 1)
	
	RETURN(.T.)
ENDPROC

PROC SOMARLETRA
***************************
LPARAMETERS tcKEY AS String

IF EMPTY(tcKEY)
	RETURN('A')
ENDIF

LOCAL lcRETORNO AS String
STORE '' TO lcRETORNO

LOCAL llSOMA AS Logical
STORE .F. TO llSOMA

LOCAL lnXI AS Integer

FOR lnXI = LEN(tcKEY) TO 1 STEP -1
	lcLETRA = SUBSTR(tcKEY,lnXI,1)
	IF NOT llSOMA
		IF ASC(lcLETRA) < 90
			lcLETRA = CHR(ASC(lcLETRA)+1)
			llSOMA = .T.
		ELSE
			lcLETRA = 'A'
		ENDIF
	ENDIF
	
	lcRETORNO = lcLETRA + lcRETORNO
ENDFOR

IF NOT llSOMA
	lcRETORNO = 'A' + lcRETORNO
ENDIF

RETURN(lcRETORNO)