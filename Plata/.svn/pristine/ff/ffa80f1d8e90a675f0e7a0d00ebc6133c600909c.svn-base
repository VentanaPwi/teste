* MENURAIZ.PRG - PROGRAMA RAIZ DO WAWCFG (CONFIGURADOR WAW)
**************
PARAMETERS tcEXEPARAM
IF TYPE('tcEXEPARAM')='N'
	tcEXEPARAM = ALLTRIM(STR(tcEXEPARAM))
ENDIF
IF TYPE('tcEXEPARAM')<>'C'
	tcEXEPARAM = ''
ENDIF

_SCREEN.WINDOWSTATE = 2		&& tela cheia
_SCREEN.Visible = .T.
SET TALK OFF
DO AMBIENTAR
CLOSE ALL

=SQLSETPROP(0,"DispLogin",3)

* DEFINE COMO AREA DE TESTES
PUBLIC glTESTES AS Logical
glTESTES = .F.
IF _VFP.StartMode=0
	glTESTES = .T.
ENDIF

IF glTESTES
	SET SYSMENU TO DEFA
	ON ERROR
ELSE
	SET RESOURCE OFF
	ON ERROR DO ROTERRO WITH ERROR(),MESSAGE(),PROGRAM(),LINENO()
	ON SHUTDOWN DO ENCERRAR
ENDIF

* OBJETO ZIP
PUBLIC goZIP AS ZIPCLASS OF ZIPCLASS.VCX
goZIP = NEWOBJECT('ZIPCLASS','ZIPCLASS.VCX') 
* SENHA PADRÃO DO START.CFG
goZIP.Password = "CONFIG0105SÃO'"

DO FORM PRINCIPAL
DO ENCERRAR
RETURN

PROC ENCERRAR
*************
	SET SYSMENU TO DEFA
	RELEASE ALL
	CLOSE ALL
*	CLEAR ALL
	ON SHUTDOWN
	CANCEL
RETURN

PROC ROTERRO
************
PARAMETERS tnMYERRO, tcMYMESS, tcMYPROG, tnMYLINH
	=MESSAGEBOX('Ocorreu uma falha no seu aplicativo e ele terá que ser encerrado! Anote a mensagem de erro e entre em contato com o suporte técnico do seu software. ERRO: '+;
	ALLTRIM(STR(tnMYERRO)) + '=' + tcMYMESS + ' LINHA ' + ALLTRIM(STR(tnMYLINH)) + ':' + tcMYPROG, 'ERRO',16)
	CANCEL
RETURN

PROC ESPERANDO
**************
PARAMETER tcMESS
	WAIT WINDOW tcMESS NOWAIT
RETURN

PROC AMBIENTAR
**************
	SET ESCAPE OFF
	SET EXCL OFF
	SET DELE ON
	SET DATE BRITISH
	SET HOURS TO 24
	SET CURSOR ON
	SET NOTIFY OFF
	SET SAFETY OFF
	SET READBORDER ON
	SET DECIMAL TO 8
	SET REPROCESS TO 3 SECONDS
	SET POINT TO ','
	SET SEPA TO '.'
	SET EXACT OFF
	SET NEAR OFF
	SET CONFIRM ON
	SET CLOCK STATUS
	SET CENTURY ON
	SET ENGINEBEHAVIOR 80
	SET SYSMENU TO
	SET MEMOWIDTH TO 255
RETURN

PROC MENS
*********
LPARAMETERS tcMENSAGEM,tnERRO
* MENSAGEM AO USUARIO, SE TNERRO=1 A MENSAGEM É MAIS GRAVE.
	IF TYPE('tnERRO')<>'N'
		tnERRO = 0
	ENDIF
	tnERRO = IIF(tnERRO>0,48,64)
	=MESSAGEBOX(tcMENSAGEM,'AVISO',tnERRO)
RETURN

FUNC WAW_CRIPTAR
****************
LPARAMETERS tcIN
	LOCAL lcOUT AS STRING
	lcOUT = goZIP.ENCRYPT(tcIN,goZIP.PASSWORD)
RETURN(lcOUT)

FUNC WAW_DECRIPTAR
******************
LPARAMETERS tcIN
	LOCAL lcOUT AS STRING
	lcOUT = goZIP.DECRYPT(tcIN,goZIP.PASSWORD)
RETURN(lcOUT)

FUNC XX
*******
LPARAMETERS tcIN
	LOCAL lcOUT AS String
	lcOUT = ALLTRIM(NVL(tcIN,''))
	lcOUT = STRTRAN(lcOUT,"'",'"')
	lcOUT = "'"+lcOUT+"'"
RETURN(lcOUT)

FUNC SBDVAI
***********
* ENCRIPTA SENHA DE BANCO DE DADOS
PARAMETERS tcSENHA
	tcSENHA = ALLTRIM(tcSENHA)
	LOCAL lcHIDEN, lcSEMENTE, lcLETRA AS String
	lcHIDEN = ''
	LOCAL X, Y AS INTEGER
	X = INT(RAND()*25)
	Y = MOD(ASC(tcSENHA+' '),10)
	lcSEMENTE = CHR(X+65)
	lcHIDEN = STR(Y,1)+lcSEMENTE
	FOR X = LEN(tcSENHA) TO 1 STEP -1
		lcLETRA = SUBSTR(tcSENHA,X,1)
		Y = ASC(lcLETRA)+ASC(lcSEMENTE)
		lcLETRA = PADL( ALLTRIM(STR(Y)) ,3,'0')
		lcHIDEN = lcHIDEN + lcLETRA
	ENDFOR
RETURN(lcHIDEN)

FUNC SBDVEM
***********
*DECRIPTA SENHA DE CONEXÃO
PARAMETERS tcHIDEN
	tcHIDEN = ALLTRIM(tcHIDEN)
	LOCAL lcSENHA, lcSEMENTE, lcLETRA AS String
	lcSENHA = ''
	lcSEMENTE = SUBSTR(tcHIDEN,2,1)
	LOCAL X, Y AS INTEGER

	FOR X = LEN(tcHIDEN) TO 3 STEP -3
		Y = VAL( SUBSTR(tcHIDEN,X-2,3) ) -ASC(lcSEMENTE)
		lcLETRA = ''
		IF Y>27 AND Y<256
			lcLETRA = CHR(Y)
		ENDIF
		lcSENHA = lcSENHA + lcLETRA
	ENDFOR
RETURN(lcSENHA)

PROC MONTACONN
**************
LPARAMETERS toCFG
* RETORNA A STRING DE CONEXÃO MONTADA E PRONTA
	IF TYPE('toCFG')<>'O'
		RETURN('')
	ENDIF
	IF EMPTY(toCFG.DS_DRIVER)
		RETURN('')
	ENDIF
	
	LOCAL lcDRIVER AS String, lcCONN AS STRING
	lcDRIVER = ALLTRIM(toCFG.DS_DRIVER)

	* STRING NO PADRÃO NORMAL
	lcCONN = 'DRIVER='+lcDRIVER
	IF NOT EMPTY(toCFG.DS_SERVER)
		lcCONN = lcCONN+';SERVER='+ALLTRIM(toCFG.DS_SERVER)
	ENDIF
	IF NOT EMPTY(toCFG.DS_USER)
		lcCONN = lcCONN+';UID='   +ALLTRIM(toCFG.DS_USER)
	ENDIF
	IF NOT EMPTY(toCFG.DS_PWD)
		lcCONN = lcCONN+';PWD='   +ALLTRIM(toCFG.DS_PWD)
	ENDIF
	IF NOT EMPTY(toCFG.DS_DBNAME)
		lcCONN = lcCONN+';DATABASE='+ALLTRIM(toCFG.DS_DBNAME)
	ENDIF
	IF NOT EMPTY(toCFG.DS_OUTROS)
		lcCONN = lcCONN + ';'+ALLTRIM(toCFG.DS_OUTROS)
	ENDIF
RETURN(lcCONN)